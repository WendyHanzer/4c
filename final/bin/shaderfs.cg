

varying vec2 Tex_cord;
varying vec3 Norm;
varying vec3 v;


uniform sampler2D glSample;


void main(void){

	vec4 finalColor = vec4(0.0, 0.0, 0.0, 0.0);
	vec4 Idiff = vec4(0.0, 0.0, 0.0, 0.0);
	vec4 Ispec = vec4(0.0, 0.0, 0.0, 0.0);
	for (int i=0; i<4 ;i++)
	{
		vec3 L = normalize(gl_LightSource[i].position.xyz - v);
		vec3 E = normalize(-v);
		vec3 R = normalize(-reflect(L,Norm));
	
		//calculate ambient term
		vec4 Iamb = gl_FrontLightProduct[i].ambient;
	
		//calculate diffuse term
		vec4 Idiff = gl_FrontLightProduct[i].diffuse * max(dot(Norm,L), 0.0);
		Idiff = clamp(Idiff, 0.0, 1.0);
	
		//calculate specular term
		vec4 Ispec = gl_FrontLightProduct[i].specular 
		            * pow(max(dot(R,E),0.0),0.3);
		Ispec = clamp(Ispec, 0.0, 1.0);
		
		
		finalColor += Iamb + Idiff + Ispec;
	}
	
	gl_FragColor = texture2D(glSample, Tex_cord.xy) * finalColor; 
  	}

